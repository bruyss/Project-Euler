#! python3
# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number
# would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
# We can see that 28 is the first triangle number to have over five divisors.
# What is the value of the first triangle number to have over five hundred divisors?

import logging

logging.basicConfig(level=logging.DEBUG, format=' %(asctime)s - %(levelname)s- %(message)s')


def countdivisors(x):
    divisors = 0
    for div in range(1, x + 1):
        if x % div == 0:
            logging.debug('%d is a divisor of %d' % (div, x))
            divisors += 1
    return divisors


# Init
limit = 500
triangle_numbers = []
num = 0
i = 1

while countdivisors(num) < limit:
    num += i
    i += 1
    triangle_numbers.append(num)
    logging.debug('Triangle number #%d is %d' % (i-1, num))

print('The first triangle number with %d divisors is %d' % (limit, triangle_numbers[-1]))
